require ast_factory
require ../instructions/instruction
require ../instructions/register

constructor PrintNode(exp, endl, line)
    statement? = true
    expression? = false
    :show
        "<Print " + exp + " \\n>"
    end

    :typecheck(symbol_table, struct_map)
        exp.typecheck(symbol_table, struct_map)
    end

    :translate_stmt(current_block, exit_block)
        result = exp.translate(current_block)
        # Print the expression result
        if endl
            current_block.add_instruction(Instruction("FunctionCall", ["printl", "i32", result], [], "void"))
        else
            current_block.add_instruction(Instruction("FunctionCall", ["print", "i32", result], [], "void"))
        end

        current_block
    end

end

:parse_print_node(json)
    PrintNode!(create_node!(json["exp"]), json["endl"], json["line"])
end