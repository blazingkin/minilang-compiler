require ast_factory
require ../types/primitive_type

constructor BlockNode(subnodes)
    statement? = true
    expression? = false
    :show
        "<Block " + subnodes.map(x -> x + "\n") + ">"
    end

    :typecheck(symbol_table, struct_map)
        for i = 0; i < subnodes.length!(); i++
            subnodes[i].typecheck(symbol_table, struct_map)
        end
    end

    :translate_stmt(current_node, exit_node)
        for i = 0; i < subnodes.length!(); i++
            if subnodes[i].statement?
                current_node = subnodes[i].translate_stmt(current_node, exit_node)
            end
        end
        current_node
    end

end

:parse_block_node(subnodes)
    BlockNode(subnodes.map!(create_node))
end