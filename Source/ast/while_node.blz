require ast_factory
require ../types/primitive_type

constructor WhileNode(guard, block, line)

    :show
        "<While " + guard + " then " + block + ">"
    end

    :typecheck (symbol_table, struct_map)
        guard_type = guard.typecheck (symbol_table, struct_map)
        block_type = block.typecheck (symbol_table, struct_map)

        if guard_type == primitive_type ("error")
            print ("Type error on line: " + line + " Expected boolean expression as a conditional but found an error instead.")
            return primitive_type ("error")
        end

        if guard_type.can_not_become (primitive_type ("bool"))
            print ("Type error on line: " + line + " Expected boolean expression as a conditional but found a(n) " + exp_type + " instead.")
            return primitive_type ("error")
        end
    end

end

:parse_while_node(json)
    WhileNode!(create_node!(json["guard"]), create_node!(json["body"]), json["line"])
end