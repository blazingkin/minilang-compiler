require ast_factory
require ../types/primitive_type

constructor DeleteNode(expr, line)
    statement? = true
    expression? = false
    :show
        "delete " + expr
    end

    :typecheck(symbol_table, struct_map)
        typ = expr.typecheck(symbol_table, struct_map)
        if typ.type != "StructType"
            print("Type error on line "+line+": Delete tried to delete non structure")
            return primitive_type("error")
        end
        typ
    end

    :translate(current_block)
        expr_register = expr.translate(current_block)
        current_block.add_instruction(Instruction("FunctionCall"), ["@free", "i8*", expr_register], [], "void")
    end

end

:parse_delete_node(json)
    DeleteNode!(create_node!(json["exp"]), json["line"])
end