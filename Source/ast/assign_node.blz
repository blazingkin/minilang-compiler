require ast_factory
require lvalue
require ../types/primitive_type

constructor AssignNode(target, right, line)
    statement? = true
    expression? = false
    :show
        "<Assign " + target + " to " + right + ">"
    end

    :typecheck(symbol_table, struct_map)
        target_type = target.typecheck(symbol_table, struct_map)
        right_type = right.typecheck(symbol_table, struct_map)
        if right_type.can_not_become(target_type)
            print("Type error on line " + line +": right side of assignment is " + right_type + " expected " + target_type +" instead")
            return primitive_type("error")
        end
        target_type
    end

    :translate_stmt(current_block, exit_block)

    end

end

:parse_assign_node(json)
    target = parse_lvalue(json["target"])
    right = create_node!(json["source"])
    
    line = json["line"]
    AssignNode(target, right, line)
end